basePath: /api/v1/
definitions:
  models.ChangePasswordInput:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  models.Japanese:
    properties:
      kana:
        type: string
      kanji:
        type: string
      romaji:
        type: string
    type: object
  models.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.RegisterInput:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
    type: object
  models.ResetPasswordInput:
    properties:
      email:
        type: string
    type: object
  models.UpdateUserInput:
    properties:
      LastName:
        type: string
      firstName:
        type: string
    type: object
  models.VocabularyInput:
    properties:
      english:
        items:
          type: string
        type: array
      examples:
        items:
          type: string
        type: array
      image:
        type: string
      japanese:
        $ref: '#/definitions/models.Japanese'
      tags:
        items:
          type: string
        type: array
      thai:
        items:
          type: string
        type: array
      type:
        type: string
      vocie:
        type: string
    type: object
info:
  contact:
    email: songvut.nakrong@gmail.com
    name: Songvut Nakrong
  description: This is an API for Nihon Vocabulary Application
  title: Nihon Vocabulary
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login Form
        in: body
        name: loginInput
        required: true
        schema:
          $ref: '#/definitions/models.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Login
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: Register Form
        in: body
        name: registerInput
        required: true
        schema:
          $ref: '#/definitions/models.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register
      tags:
      - Authentication
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset Password
      parameters:
      - description: Reset Password Form
        in: body
        name: resetPasswordInput
        required: true
        schema:
          $ref: '#/definitions/models.ResetPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Reset Password
      tags:
      - Authentication
  /user:
    delete:
      consumes:
      - application/json
      description: Delete User
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete User
      tags:
      - User
  /user/:
    get:
      consumes:
      - application/json
      description: Get User
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update User Form
        in: body
        name: updateUserInput
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update User
      tags:
      - User
  /user/password:
    put:
      consumes:
      - application/json
      description: Update User
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Change Password Form
        in: body
        name: changePasswordInput
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Change Password
      tags:
      - User
  /vocabulary:
    post:
      consumes:
      - application/json
      description: Create Vocabulary
      parameters:
      - description: Vocabulary ID
        in: body
        name: vocabularyInput
        required: true
        schema:
          $ref: '#/definitions/models.VocabularyInput'
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Create Vocabulary
      tags:
      - Vocabulary
  /vocabulary/:
    get:
      consumes:
      - application/json
      description: Get Vocabularies
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get Vocabularies
      tags:
      - Vocabulary
  /vocabulary/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Vocabulary
      parameters:
      - description: Vocabulary ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Delete Vocabulary
      tags:
      - Vocabulary
    get:
      consumes:
      - application/json
      description: Get Vocabulary
      parameters:
      - description: Vocabulary ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get Vocabulary
      tags:
      - Vocabulary
    put:
      consumes:
      - application/json
      description: Update Vocabulary
      parameters:
      - description: Vocabulary ID
        in: body
        name: vocabularyInput
        required: true
        schema:
          $ref: '#/definitions/models.VocabularyInput'
      - description: Vocabulary ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Update Vocabulary
      tags:
      - Vocabulary
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: ApiKeyAuth
    type: apiKey
swagger: "2.0"
